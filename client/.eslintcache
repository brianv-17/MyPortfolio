[{"/Users/brianvazquez/Desktop/portfolio/client/src/index.js":"1","/Users/brianvazquez/Desktop/portfolio/client/src/App.js":"2","/Users/brianvazquez/Desktop/portfolio/client/src/reportWebVitals.js":"3","/Users/brianvazquez/Desktop/portfolio/client/src/views/Main.js":"4","/Users/brianvazquez/Desktop/portfolio/client/src/components/ContactForm.jsx":"5","/Users/brianvazquez/Desktop/portfolio/client/src/components/Summary.jsx":"6","/Users/brianvazquez/Desktop/portfolio/client/src/views/About.js":"7","/Users/brianvazquez/Desktop/portfolio/client/src/components/Example.jsx":"8"},{"size":652,"mtime":1612280313935,"results":"9","hashOfConfig":"10"},{"size":342,"mtime":1612199055561,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611688947415,"results":"12","hashOfConfig":"10"},{"size":344,"mtime":1612282392574,"results":"13","hashOfConfig":"10"},{"size":2470,"mtime":1611874839165,"results":"14","hashOfConfig":"10"},{"size":3891,"mtime":1612557285635,"results":"15","hashOfConfig":"10"},{"size":664,"mtime":1612542976860,"results":"16","hashOfConfig":"10"},{"size":1139,"mtime":1612284469939,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1fcyj4u",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/brianvazquez/Desktop/portfolio/client/src/index.js",["37","38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["39","40"],"/Users/brianvazquez/Desktop/portfolio/client/src/App.js",[],"/Users/brianvazquez/Desktop/portfolio/client/src/reportWebVitals.js",[],"/Users/brianvazquez/Desktop/portfolio/client/src/views/Main.js",["41","42","43"],"/Users/brianvazquez/Desktop/portfolio/client/src/components/ContactForm.jsx",["44"],"import React, { useState } from 'react'\nimport axios from 'axios';\nexport default () => {\n    //keep track of what is being typed via useState hook\n    const [firstName, setFirstName] = useState(\"\"); \n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [organization, setOrganization] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [errors, setErrors] = useState([]); \n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/contact', {\n            firstName,\n            lastName,\n            email,\n            organization,\n            message\n        })\n            .then(res=>console.log(res))\n            .catch(err=>{\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr);\n            })\n    }\n    //onChange to update firstName and lastName\n    return (\n        <div>\n            <form onSubmit={onSubmitHandler}>\n                <div style={{ color: \"darkred\" }}>\n                {errors.map((err, index) => <p key={index}>{err}</p>)}\n                </div>\n                <p>\n                    <label>First Name</label><br/>\n                    <input type=\"text\" onChange = {(e)=>setFirstName(e.target.value)}/>\n                </p>\n                <p>\n                    <label>Last Name</label><br/>\n                    <input type=\"text\" onChange = {(e)=>setLastName(e.target.value)}/>\n                </p>\n                <p>\n                    <label>Email</label><br/>\n                    <input type=\"email\" onChange = {(e)=>setEmail(e.target.value)}/>\n                </p>\n                <p>\n                    <label>Organization</label><br/>\n                    <input type=\"text\" onChange = {(e)=>setOrganization(e.target.value)}/>\n                </p>\n                <p>\n                    <label>Message</label><br/>\n                    <input type=\"text\" onChange = {(e)=>setMessage(e.target.value)}/>\n                </p>\n                <input type=\"submit\"/>\n            </form>\n        </div>\n    )\n}","/Users/brianvazquez/Desktop/portfolio/client/src/components/Summary.jsx",["45","46"],"/Users/brianvazquez/Desktop/portfolio/client/src/views/About.js",["47","48","49"],"/Users/brianvazquez/Desktop/portfolio/client/src/components/Example.jsx",["50","51","52"],{"ruleId":"53","severity":1,"message":"54","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":9},{"ruleId":"53","severity":1,"message":"57","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":14},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"53","severity":1,"message":"62","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":13,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":3,"column":1,"nodeType":"66","endLine":63,"endColumn":2},{"ruleId":"53","severity":1,"message":"63","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":2,"column":1,"nodeType":"66","endLine":64,"endColumn":2},{"ruleId":"53","severity":1,"message":"62","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":4,"column":1,"nodeType":"66","endLine":15,"endColumn":2},{"ruleId":"53","severity":1,"message":"62","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":6,"column":1,"nodeType":"66","endLine":34,"endColumn":2},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useEffect' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]